@model IEnumerable<YourProjectToolRental.Models.Inventory>

@{
	ViewBag.Title = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>
@*tool headers: ToolId, Name, Brand, Description, Available, Condition*@
<p>
	<a href="@Url.Action("Create", "Inventory")" class="btn btn-default">
		<i class="fas fa-plus"></i> Create new
	</a>
</p>

<script>
    @*var model = @Html.Raw(Json.Encode(Model));*@
    @*var availableInventory = @Html.Raw(Json.Encode(ViewBag.AvailableInventory));*@
    var toolContent = [];
    var CSVArray = [];
    window.onload = loadfunction;

    var brand = null;
    var active = null;

    function loadfunction()
    {
        var table = document.getElementById("toolsTable");
        var count = 0;

        //Loading data from table to toolContent array
        for (var i = 2, row; row = table.rows[i]; i++)
        {
            var rowContent = [];

			for (var j = 0; j < 6; j++) {
				var content = row.cells[j].innerText;


				//This controls whether its a checkbox or not value

				rowContent.push(content);

			}
            rowContent.push(row.innerHTML);
            toolContent[count] = rowContent;
            count++;

        }



        console.log("onload toolContent: " + toolContent);

    }

    //Csv export

	function ExportCsv() {
		CSVArray = CSVArray.length == 0 ? toolContent : CSVArray;
		let csvContent = "data:text/csv;charset=utf-8,";

		CSVArray.forEach(function (element) {
			var rowArray = [element[0], element[1], element[2], element[3], element[4], element[5]];
			let row = rowArray.join(",");

			csvContent += row + "\r\n";
		});

		var encodedUri = encodeURI(csvContent);
		var link = document.createElement("a");

		var currentDate = new Date();
		var dateString = currentDate.toString();

		link.setAttribute("href", encodedUri);
		link.setAttribute("download", "toolReport" + dateString + ".csv");

		document.body.appendChild(link);

		link.click();
	}

    //Filter methods

    function setTable(array)
    {
        var tbl = document.getElementById("toolsTable");

        //Clear table
        var rows = tbl.getElementsByTagName("tr").length;
        for (var i = rows - 1; i > 1; i--)
        {
            tbl.deleteRow(i);
        }

        //Populate Table
        for (var y = 0; y < array.length; y++)
        {
            var row = tbl.insertRow(y + 2);
            row.innerHTML = array[y][6];
        }
    }

    function filter()
	{
		var filteredArray = toolContent;


        console.log("toolContent: " + toolContent);
        console.log("filteredArray: " + filteredArray);

        console.log("brand: " + brand);

        if (brand != null)
		{
			filteredArray = filteredArray.filter(function (item) {
                console.log("FILTERING OVER ITEM: " + item);

                console.log("typeof brand: " + typeof brand);
                console.log("typeof: " + typeof item[2]);
                console.log("ITEM[2]: " + item[2]);
                console.log("equals: " + (item[2] == brand));

                console.log("replaced: " + item[2].replace(' ', ''));

                return item[2].replace(' ', '') == brand;

                //return true;
                // return "/" + brand + "/".test(item[2]);
                //return item[2].includes(brand);
            })
            console.log("filtered filteredArray: " + filteredArray);
        }

        console.log("active: " + active);

        if (active != null)
		{
			filteredArray = filteredArray.filter(function (item)
			{
				return item[4].replace(' ', '') == active;
            });
        }

        CSVArray = filteredArray;

        setTable(filteredArray);

        console.log("final filteredArray: " + filteredArray);
    }

    function filterBrand(value)
    {
        console.log("Filtering brand by: " + value);
        brand = value == "" ? null : value;
        filter();
    }

    function filterActive(value)
    {
        console.log("Filtering active by: " + value);
        active = value == "" ? null : value;
        filter();
    }


</script>

<p id="debugging"></p>


<table class="table" id="toolsTable">

	<tr>
		<th>
			Asset Id
		</th>
		<th>
			Name
		</th>
		<th>
			Brand
		</th>
		<th>
			Description
		</th>
		<th>
			Active
		</th>
		<th>
			Comment
		</th>
		<th></th>
	</tr>

	<tr>
		<td><b>Filter</b></td>
		<td></td>
		<td>
			@*brand*@
			@Html.DropDownList("Id", new SelectList(ViewBag.BrandFilter), "Select", new { onchange = "filterBrand(this.value);" })
		</td>
		<td></td>
		<td>
			@*Active*@
			@Html.DropDownList("Id", new SelectList(new[] { "Active", "Retired" }), "Select", new { onchange = "filterActive(this.value);" })
		</td>
		<td></td>
		<td>
			<a onclick="ExportCsv()" class="btn btn-default">
				<i class="fas fa-external-link-square-alt"></i> Export CSV
			</a>
		</td>
	</tr>

	@foreach (var item in Model)
	{
	<tr>
		<td>
			@Html.DisplayFor(modelItem => item.AssetId)
		</td>
		<td>
			@Html.DisplayFor(modelItem => item.ToolType)
		</td>
		<td>
			@Html.DisplayFor(modelItem => item.Brand)
		</td>
		<td>
			@Html.DisplayFor(modelItem => item.Description)
		</td>
		<td>
			@{
				if (item.Active)
				{
					<p>
						Active
					</p>
				}
				else
				{
					<p>
						Retired
					</p>
				}
			}
		</td>
		<td>
			@Html.DisplayFor(modelItem => item.Comment)
		</td>

		<td>

			<a href="@Url.Action("Edit", "Inventory", new { id=item.AssetId })"
			   class="btn btn-default">
				<i class="fas fa-pencil-alt"></i> Edit
			</a>
			<a href="@Url.Action("Details", "Inventory", new { id = item.AssetId })"
			   class="btn btn-default">
				<i class="fas fa-info"></i> Details
			</a>
			<a href="@Url.Action("Delete", "Inventory", new { id=item.AssetId })"
			   class="btn btn-default">
				<i class="fas fa-trash"></i> Delete
			</a>
		</td>
	</tr>
	}

</table>


@section scripts
{
	<script>
        $(function () {
            var successMessage = '@TempData["SuccessMessage"]'
            if (successMessage != '')
                alertify.success(successMessage);
        });
	</script>
}
